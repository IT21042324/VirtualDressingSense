import * as Print from "expo-print";
import * as FileSystem from "expo-file-system";
import * as IntentLauncher from "expo-intent-launcher";
import { Platform } from "react-native";
import * as Sharing from "expo-sharing";
import { generateReportForStoresWithUserId } from "../../reports/storeReport";
import { useEffect, useState } from "react";
import { pdf_html } from "../globalConstants";

//pass the userId without hardcoding here. maybe use helperContext to store the relevant storeId
export const CreateReport = async () => {
  // const userId = "12312312312";
  // const [storeDetails, setStoreDetails] = useState({});

  // useEffect(() => {
  //   async function getDetails() {
  //     const storeInfo = await generateReportForStoresWithUserId(stores);
  //     setStoreDetails(storeInfo);
  //   }
  //   getDetails();
  // }, []);

  // const pdf_html1 = `
  //   <html>
  //   <head>
  //     <style>
  //       body {
  //         font-family: Arial, sans-serif;
  //         margin: 0;
  //         padding: 0;
  //       }

  //       .container {
  //         max-width: 800px;
  //         margin: 0 auto;
  //         padding: 20px;
  //       }

  //       .logo {
  //         display: block;
  //         margin: 0 auto;
  //       }

  //       .title {
  //         text-align: center;
  //         font-size: 24px;
  //         color: blue;
  //         margin-top: 20px;
  //         margin-bottom: 10px;
  //       }

  //       .subtitle {
  //         text-align: left;
  //         font-size: 18px;
  //         color: green;
  //         margin-top: 10px;
  //         margin-bottom: 10px;
  //       }

  //       .paragraph {
  //         text-align: justify;
  //         font-size: 14px;
  //         color: black;
  //         margin-top: 10px;
  //         margin-bottom: 10px;
  //       }

  //       .table {
  //         border-collapse: collapse;
  //         width: 100%;
  //       }

  //       .table th, .table td {
  //         border: 1px solid black;
  //         padding: 5px;
  //         text-align: left;
  //       }

  //       .table th {
  //         background-color: lightgray;
  //       }
  //     </style>
  //   </head>
  //   <body>
  //     <div class="container">
  //       <img src="logo.png" alt="Logo" class="logo">

  //       <!-- You can change the title here -->
  //       <h1 class="title">Store Statistics</h1>

  //       <!-- You can change the subtitle here -->
  //       <h2 class="subtitle">Report for User ID ${userId}</h2>

  //       <!-- You can change the paragraph here -->
  //       <p class="paragraph">This report summarizes the data of the stores owned by the user with ID ${userId}. It includes the number of stores, the number of items in each store, and the featured brands in each store.</p>

  //       <!-- You can add more paragraphs here -->

  //       <!-- You can add a table here -->
  //       <table class="table">
  //         <thead>
  //           <tr>
  //             <th>Store ID</th>
  //             <th>Store Name</th>
  //             <th>Registered Address</th>
  //             <th>Number of Items</th>
  //             <th>Featured Brands</th>
  //           </tr>
  //         </thead>
  //         <tbody>
  //           <!-- You can loop through the storeDetails array here -->
  //           ${storeDetails
  //             .map(
  //               (store) => `
  //           <tr>
  //             <td>${store._id}</td>
  //             <td>${store.storeName}</td>
  //             <td>${store.registeredAddress}</td>
  //             <td>${store.numberOfItems}</td>
  //             <td>${store.featuredBrandsInfo.featuredBrands.join(", ")}</td>
  //           </tr>`
  //             )
  //             .join("")}
  //           <!-- End of loop -->
  //         </tbody>
  //       </table>

  //       <!-- You can add more tables or charts here -->

  //       <!-- You can add a footer here -->
  //       <p class="paragraph">This report was generated by Bing on ${new Date().toLocaleString()}.</p>

  //     </div>
  //   </body>
  //   </html>
  //   `;

  try {
    let options = {
      html: pdf_html,
      fileName: "Report",
      directory: "Downloads",
      base64: true,
    };
    let file = await Print.printToFileAsync(options);

    if (file.uri) {
      console.log("PDF Created");

      FileSystem.getContentUriAsync(file.uri).then((cUri) => {
        if (Platform.OS === "ios") {
          Sharing.shareAsync(cUri);
        } else {
          IntentLauncher.startActivityAsync("android.intent.action.VIEW", {
            data: cUri,
            flags: 1,
            type: "application/pdf",
          });
        }
      });
    } else {
      console.error("Report Creation Failed");
    }
  } catch (error) {
    console.error(error);
  }
};
